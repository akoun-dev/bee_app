rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Fonctions utilitaires
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuthenticated() &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Règles pour la collection users
    match /users/{userId} {
      // Tout le monde peut lire les profils utilisateurs
      allow read: if isAuthenticated();
      // Seul l'utilisateur lui-même ou un admin peut modifier son profil
      allow write: if isOwner(userId) || isAdmin();

      // Sous-collections des utilisateurs
      match /notifications/{notificationId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }
    }

    // Agents (lecture publique, écriture réservée aux admins)
    match /agents/{agentId} {
      allow read: if true;
      allow create, delete: if isAdmin();
      // Permettre aux utilisateurs authentifiés de mettre à jour seulement les champs de notation
      allow update: if isAdmin() || (
        isAuthenticated() &&
        // Vérifier que seuls les champs de notation sont modifiés
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['averageRating', 'ratingCount']) &&
        // Vérifier que les autres champs restent inchangés
        request.resource.data.fullName == resource.data.fullName &&
        request.resource.data.age == resource.data.age &&
        request.resource.data.gender == resource.data.gender &&
        request.resource.data.profession == resource.data.profession
      );
    }

    // Réservations (lecture/écriture par le créateur ou admin)
    match /reservations/{reservationId} {
      allow read, write: if isAuthenticated() &&
        (request.auth.uid == resource.data.userId || isAdmin());
      allow create: if isAuthenticated();
    }

    // Avis (lecture publique, écriture par utilisateur connecté)
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Règles pour la collection settings
    match /settings/{settingId} {
      // Tout le monde peut lire les paramètres
      allow read: if isAuthenticated();
      // Seul l'admin peut modifier les paramètres
      allow write: if isAdmin();
    }

    // Règles pour la collection reports
    match /reports/{reportId} {
      // Seul l'admin peut lire/écrire les rapports
      allow read, write: if isAdmin();
    }

    // Règles pour la collection notifications
    match /notifications/{notificationId} {
      // Tout utilisateur authentifié peut lire les notifications
      allow read: if isAuthenticated();
      // Seul l'admin peut créer/modifier/supprimer des notifications
      allow write: if isAdmin();
    }

    // Règles pour la collection userPreferences
    match /userPreferences/{userId} {
      // Un utilisateur peut lire/écrire ses propres préférences
      // Un admin peut lire/écrire toutes les préférences
      allow read, write: if isOwner(userId) || isAdmin();
    }

    // Nouvelles règles pour les fonctionnalités admin avancées

    // Règles pour les logs d'audit
    match /audit_logs/{logId} {
      // Seuls les admins peuvent lire les logs d'audit
      allow read: if isAdmin();
      // Seul le système peut créer des logs (via Cloud Functions ou SDK Admin)
      allow create: if isAdmin();
      // Interdire la modification/suppression des logs pour l'intégrité
      allow update, delete: if false;
    }

    // Règles pour les paramètres de l'application
    match /app_settings/{settingId} {
      // Tous les utilisateurs authentifiés peuvent lire les paramètres
      allow read: if isAuthenticated();
      // Seuls les admins peuvent modifier les paramètres
      allow write: if isAdmin();
    }

    // Règles pour l'historique des paramètres
    match /settings_history/{historyId} {
      // Seuls les admins peuvent lire l'historique
      allow read: if isAdmin();
      // Seul le système peut créer l'historique
      allow create: if isAdmin();
      // Interdire la modification/suppression pour l'intégrité
      allow update, delete: if false;
    }

    // Règles pour les notifications admin
    match /admin_notifications/{notificationId} {
      // Seuls les admins peuvent lire/écrire les notifications admin
      allow read, write: if isAdmin();
    }

    // Règles pour les notifications utilisateur
    match /user_notifications/{notificationId} {
      // Un utilisateur peut lire ses propres notifications
      // Un admin peut lire toutes les notifications
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || isAdmin()
      );
      // Seuls les admins peuvent créer des notifications
      allow create: if isAdmin();
      // Un utilisateur peut marquer ses notifications comme lues
      // Un admin peut modifier toutes les notifications
      allow update: if isAuthenticated() && (
        (resource.data.userId == request.auth.uid &&
         request.resource.data.diff(resource.data).affectedKeys().hasOnly(['read'])) ||
        isAdmin()
      );
      // Seuls les admins peuvent supprimer des notifications
      allow delete: if isAdmin();
    }

    // Règles pour les notifications planifiées
    match /scheduled_notifications/{notificationId} {
      // Seuls les admins peuvent gérer les notifications planifiées
      allow read, write: if isAdmin();
    }

    // Règles pour les rapports planifiés
    match /scheduled_reports/{reportId} {
      // Seuls les admins peuvent gérer les rapports planifiés
      allow read, write: if isAdmin();
    }

    // Règles pour les notifications reçues (historique)
    match /received_notifications/{notificationId} {
      // Seuls les admins peuvent lire l'historique des notifications
      allow read: if isAdmin();
      // Seul le système peut créer l'historique
      allow create: if isAdmin();
      // Interdire la modification/suppression pour l'intégrité
      allow update, delete: if false;
    }

    // Règles pour les métriques système (monitoring)
    match /system_metrics/{metricId} {
      // Seuls les admins peuvent lire les métriques système
      allow read: if isAdmin();
      // Seul le système peut créer/modifier les métriques
      allow write: if isAdmin();
    }

    // Règles par défaut - refuser tout accès non spécifié
    match /{document=**} {
      allow read, write: if false;
    }
  }
}