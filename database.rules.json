{
  "rules": {
    // Règles pour les statuts en ligne des utilisateurs
    "status": {
      "$uid": {
        // Tout le monde peut lire le statut en ligne
        ".read": "auth != null",
        // Seul l'utilisateur lui-même peut modifier son statut
        ".write": "auth != null && auth.uid == $uid"
      }
    },

    // Règles pour les messages de chat
    "messages": {
      "$conversationId": {
        // Les participants à la conversation peuvent lire/écrire
        ".read": "auth != null && (root.child('conversations').child($conversationId).child('participants').child(auth.uid).exists() || root.child('users').child(auth.uid).child('isAdmin').val() == true)",
        ".write": "auth != null && (root.child('conversations').child($conversationId).child('participants').child(auth.uid).exists() || root.child('users').child(auth.uid).child('isAdmin').val() == true)",

        "$messageId": {
          // Validation des données
          ".validate": "newData.hasChildren(['senderId', 'text', 'timestamp'])",
          "senderId": {
            // Le senderId doit correspondre à l'utilisateur authentifié
            ".validate": "newData.val() == auth.uid"
          },
          "timestamp": {
            // Le timestamp doit être le timestamp actuel
            ".validate": "newData.val() <= now"
          }
        }
      }
    },

    // Règles pour les conversations
    "conversations": {
      "$conversationId": {
        // Les participants à la conversation peuvent lire
        ".read": "auth != null && (data.child('participants').child(auth.uid).exists() || root.child('users').child(auth.uid).child('isAdmin').val() == true)",
        // Seuls les participants peuvent créer/modifier une conversation
        ".write": "auth != null && (data.child('participants').child(auth.uid).exists() || newData.child('participants').child(auth.uid).exists() || root.child('users').child(auth.uid).child('isAdmin').val() == true)",

        // Validation des données
        ".validate": "newData.hasChildren(['participants', 'lastMessage', 'updatedAt'])",
        "participants": {
          // Au moins deux participants
          ".validate": "newData.hasChildren() && newData.val() != null"
        },
        "updatedAt": {
          // Le timestamp doit être le timestamp actuel
          ".validate": "newData.val() <= now"
        }
      }
    },

    // Règles pour les notifications en temps réel
    "notifications": {
      "$uid": {
        // L'utilisateur peut lire ses propres notifications
        ".read": "auth != null && auth.uid == $uid",
        // Seul l'admin peut écrire des notifications
        ".write": "auth != null && root.child('users').child(auth.uid).child('isAdmin').val() == true",

        "$notificationId": {
          // Validation des données
          ".validate": "newData.hasChildren(['title', 'body', 'timestamp', 'read'])"
        }
      }
    },

    // Règles par défaut - refuser tout accès non spécifié
    "$other": {
      ".read": false,
      ".write": false
    }
  }
}